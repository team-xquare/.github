name: Update README with Services

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4

      - name: Clone GitOps repo
        run: git clone https://github.com/team-xquare/xquare-onpremise-project-gitops-repo.git gitops

      - name: Generate README section
        run: |
          cd gitops
          echo "<details>" > ../services.md
          echo "<summary><h3>XQUARE를 통해 배포된 서비스 보기</h3></summary>" >> ../services.md
          echo "" >> ../services.md
          
          find projects -type f -name "*.yaml" \
            | while read -r f; do
                app_count=$(yq eval '.applications | length' "$f" 2>/dev/null || echo 0)
                project_name=$(basename "$f" .yaml)
                echo "$app_count|$project_name|$f"
              done \
            | sort -t'|' -k1,1nr -k2,2 \
            | while IFS='|' read -r app_count project_name project_file; do
                [[ "$app_count" == "0" ]] && continue
                project_name_upper=$(echo "$project_name" | tr '[:lower:]' '[:upper:]')

                echo "### $project_name_upper" >> ../services.md
                echo "" >> ../services.md
                echo "| Service | GitHub | URL |" >> ../services.md
                echo "|---------|--------|-----|" >> ../services.md

                for ((i=0; i<app_count; i++)); do
                  name=$(yq eval ".applications[$i].name // \"unknown\"" "$project_file")
                  owner=$(yq eval ".applications[$i].github.owner // \"unknown\"" "$project_file")
                  repo=$(yq eval ".applications[$i].github.repo // \"unknown\"" "$project_file")
                  github_url="No repository"
                  [[ "$owner" != "unknown" && "$repo" != "unknown" && "$owner" != "null" && "$repo" != "null" ]] \
                    && github_url="[GitHub](https://github.com/$owner/$repo)"

                  routes=$(yq eval ".applications[$i].endpoints[]?.routes[]?" "$project_file" | head -5)
                  if [[ -n "$routes" ]]; then
                    url_list=$(while read -r r; do [[ -n "$r" ]] && echo -n "[${r}](https://$r)<br>"; done <<< "$routes")
                    url_display="${url_list%<br>}"
                  else
                    url_display="No routes"
                  fi

                  echo "| $name | $github_url | $url_display |" >> ../services.md
                done
                echo "" >> ../services.md
              done
          
          echo "</details>" >> ../services.md

      - name: Update profile README
        run: |
          mkdir -p profile
          sed -i '/<details>/,$d' profile/README.md 2>/dev/null || true
          cat services.md >> profile/README.md

      - name: Commit and push
        run: |
          git config --local user.name "XQUARE GitOps Bot"
          git config --local user.email "teamxquare@gmail.com"
          git add profile/README.md
          git diff --staged --quiet || {
            git commit -m "docs: update services [skip ci]"
            git push
          }
